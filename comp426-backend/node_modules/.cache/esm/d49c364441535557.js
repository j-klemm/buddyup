let express,parseGet,parsePost,parseDelete,authenticateUser,modifyUserPath;_415‍.x([["router",()=>router],["prefix",()=>prefix]]);_415‍.w("express",[["default",["express"],function(v){express=v}]]);_415‍.w("../middlewares/parse_get",[["parseGet",["parseGet"],function(v){parseGet=v}]]);_415‍.w("../middlewares/parse_post",[["parsePost",["parsePost"],function(v){parsePost=v}]]);_415‍.w("../middlewares/parse_delete",[["parseDelete",["parseDelete"],function(v){parseDelete=v}]]);_415‍.w("../middlewares/auth",[["authenticateUser",["authenticateUser"],function(v){authenticateUser=v}]]);_415‍.w("../middlewares/modify_user_path",[["modifyUserPath",["modifyUserPath"],function(v){modifyUserPath=v}]]);






       const router = express.Router();
       const prefix = '/user';

const {userStore} = require('../data/DataStore');

/**
 * Every request needs to be from a logged in user.
 * Modify path prefixes each request with the user's name.
 */
router.use([authenticateUser, modifyUserPath]);

router.get('/*', parseGet, function (req, res) {
  const result = req.handleGet(userStore);
  if (typeof result !== 'undefined') {
    res.send({result})
  }
});

router.post('/*', parsePost, function (req, res) {
  const result = req.handlePost(userStore);
  if (typeof result !== 'undefined') {
    res.send({result})
  }
});

router.delete('/*', parseDelete, function (req, res) {
  const result = req.handleDelete(userStore);
  if (typeof result !== 'undefined') {
    res.send({result})
  }
});
